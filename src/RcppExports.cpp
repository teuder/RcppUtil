// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// fast_factor
SEXP fast_factor(SEXP x);
RcppExport SEXP RcppUtil_fast_factor(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    __result = Rcpp::wrap(fast_factor(x));
    return __result;
END_RCPP
}
// asSparseMatrix
S4 asSparseMatrix(DataFrame df, bool checkNA);
RcppExport SEXP RcppUtil_asSparseMatrix(SEXP dfSEXP, SEXP checkNASEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type checkNA(checkNASEXP);
    __result = Rcpp::wrap(asSparseMatrix(df, checkNA));
    return __result;
END_RCPP
}
// sparseMatrixToDataFrame
List sparseMatrixToDataFrame(S4 sm);
RcppExport SEXP RcppUtil_sparseMatrixToDataFrame(SEXP smSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< S4 >::type sm(smSEXP);
    __result = Rcpp::wrap(sparseMatrixToDataFrame(sm));
    return __result;
END_RCPP
}
// catdap
double catdap(RObject y, RObject x);
RcppExport SEXP RcppUtil_catdap(SEXP ySEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< RObject >::type y(ySEXP);
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    __result = Rcpp::wrap(catdap(y, x));
    return __result;
END_RCPP
}
// apply_catdap
NumericVector apply_catdap(IntegerVector y, DataFrame df);
RcppExport SEXP RcppUtil_apply_catdap(SEXP ySEXP, SEXP dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    __result = Rcpp::wrap(apply_catdap(y, df));
    return __result;
END_RCPP
}
// thread_function
DataFrame thread_function(DataFrame df, int n);
RcppExport SEXP RcppUtil_thread_function(SEXP dfSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(thread_function(df, n));
    return __result;
END_RCPP
}
// thread_function2
DataFrame thread_function2(std::vector<std::vector<double>> df, int n);
RcppExport SEXP RcppUtil_thread_function2(SEXP dfSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<std::vector<double>> >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(thread_function2(df, n));
    return __result;
END_RCPP
}
// thread_function3
DataFrame thread_function3(DataFrame df, int n);
RcppExport SEXP RcppUtil_thread_function3(SEXP dfSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(thread_function3(df, n));
    return __result;
END_RCPP
}
// makeDummyList
List makeDummyList(SEXP x, bool fullrank, const std::string prefix);
RcppExport SEXP RcppUtil_makeDummyList(SEXP xSEXP, SEXP fullrankSEXP, SEXP prefixSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type fullrank(fullrankSEXP);
    Rcpp::traits::input_parameter< const std::string >::type prefix(prefixSEXP);
    __result = Rcpp::wrap(makeDummyList(x, fullrank, prefix));
    return __result;
END_RCPP
}
// makeDummyDf
DataFrame makeDummyDf(SEXP x, bool fullrank, const std::string prefix);
RcppExport SEXP RcppUtil_makeDummyDf(SEXP xSEXP, SEXP fullrankSEXP, SEXP prefixSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type fullrank(fullrankSEXP);
    Rcpp::traits::input_parameter< const std::string >::type prefix(prefixSEXP);
    __result = Rcpp::wrap(makeDummyDf(x, fullrank, prefix));
    return __result;
END_RCPP
}
// make_dummy_p
DataFrame make_dummy_p(DataFrame df, const int cores, const std::string sep_cat, const bool fullrank);
RcppExport SEXP RcppUtil_make_dummy_p(SEXP dfSEXP, SEXP coresSEXP, SEXP sep_catSEXP, SEXP fullrankSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< const int >::type cores(coresSEXP);
    Rcpp::traits::input_parameter< const std::string >::type sep_cat(sep_catSEXP);
    Rcpp::traits::input_parameter< const bool >::type fullrank(fullrankSEXP);
    __result = Rcpp::wrap(make_dummy_p(df, cores, sep_cat, fullrank));
    return __result;
END_RCPP
}
// make_dummy_pp
DataFrame make_dummy_pp(DataFrame df, const int cores, const std::string sep_cat, const bool fullrank);
RcppExport SEXP RcppUtil_make_dummy_pp(SEXP dfSEXP, SEXP coresSEXP, SEXP sep_catSEXP, SEXP fullrankSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< const int >::type cores(coresSEXP);
    Rcpp::traits::input_parameter< const std::string >::type sep_cat(sep_catSEXP);
    Rcpp::traits::input_parameter< const bool >::type fullrank(fullrankSEXP);
    __result = Rcpp::wrap(make_dummy_pp(df, cores, sep_cat, fullrank));
    return __result;
END_RCPP
}
